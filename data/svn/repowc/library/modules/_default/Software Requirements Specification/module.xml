<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<module>
    <field id="author">admin</field>
    <field id="created">2011-02-01 12:32:07.874 +0100</field>
    <field id="homePageContent" text-type="text/html"><![CDATA[<h1 id="polarion_wiki macro name=module-workitem;params=id=WI-165"></h1><p id="polarion_new_0">
  A Software Requirements Specification (SRS) is a complete description of the behavior of the system to be developed. It includes a set of use cases that describe all the interactions the users will have with the software. Use cases are also known as functional requirements. In addition to use cases, the SRS also contains nonfunctional (or supplementary) requirements. Non-functional requirements are requirements which impose constraints on the design or implementation (such as performance engineering requirements, quality standards, or design constraints).
</p><div id="polarion_wiki macro name=toc"></div><h2 id="polarion_wiki macro name=module-workitem;params=id=WI-166"></h2><h3 id="polarion_wiki macro name=module-workitem;params=id=WI-167"></h3><p id="polarion_merged_16">
  <span style="font-style: italic;">Identify the purpose of this SRS and its intended audience.</span>
</p><h3 id="polarion_wiki macro name=module-workitem;params=id=WI-168"></h3><p id="polarion_merged_17">
  <span style="font-style: italic;">Provide a short description of the software being specified and its purpose, including relevant benefits, objectives, and goals. If a separate business requirements document is available, refer to it rather than duplicating its contents here. An SRS that specifies the next release of an evolving product should contain its own scope statement as a subset of the long-term strategic product vision.</span>
</p><h3 id="polarion_wiki macro name=module-workitem;params=id=WI-169"></h3><p id="polarion_merged_18">
  <span style="font-style: italic;">List any other documents or Web addresses to which this SRS refers. These may include user interface style guides, contracts, standards, system requirements specifications, use case documents, or a vision and scope document. Provide enough information so that the reader could access a copy of each reference, including title, author, version number, date, and source or location.</span>
</p><h3 id="polarion_wiki macro name=module-workitem;params=id=WI-170"></h3><p id="polarion_merged_19">
  <span style="font-style: italic;">A short description of how the rest of the SRS is organized and what can be found in the rest of the document.</span>
</p><h2 id="polarion_wiki macro name=module-workitem;params=id=WI-171"></h2><p id="polarion_merged_0">
  <span style="font-style: italic;">Provide an overall background description of the requirements. This is a very client oriented view, and should be understandable by a general audience.</span>
</p><h3 id="polarion_wiki macro name=module-workitem;params=id=WI-311"></h3><p id="polarion_merged_4">
  <span style="font-style: italic;">Identify major system interfaces (ex. System/component interfaces, user interfaces, hardware interfaces, communication interface) and provide an overall description of their functionality to satisfy the system requirements. A block diagram showing the major components of the system and the interfaces, interconnections and external interfaces should be included.</span>
</p><h3 id="polarion_wiki macro name=module-workitem;params=id=WI-312"></h3><p id="polarion_merged_7">
  <span style="font-style: italic;">Provide a summary of the major functions that the software will perform. Do not mention avast amount of details. It should be understandable to the customer or to anyone else reading the document for the first time.</span>
</p><h2 id="polarion_wiki macro name=module-workitem;params=id=WI-172"></h2><p id="polarion_merged_8">
  <span style="font-style: italic;">This section includes all the technical information needed to design the software. It is more specific than the previous section. It contains all the software requirements at a level of detail sufficient to enable designers to design a system to satisfy those requirements, and testers to test that the system satisfies those requirements. Remember, the requirements should exhibit the following properties: correct, unambiguous, complete and consistent.</span>
</p><h3 id="polarion_wiki macro name=module-workitem;params=id=WI-173"></h3><p id="polarion_merged_1">
  <span style="font-style: italic;">This template illustrates organizing the functional requirements for the product by system features, the major services provided by the product. You may prefer to organize this section by use case, mode of operation, user class, object class, functional hierarchy, or combination of these, whatever makes the most logical sense for your product.</span>
</p><div id="polarion_wiki macro name=module-workitem;params=id=WI-2"></div><div id="polarion_wiki macro name=module-workitem;params=id=WI-34|level=1"></div><h3 id="polarion_wiki macro name=module-workitem;params=id=WI-313"></h3><h4 id="polarion_wiki macro name=module-workitem;params=id=WI-314"></h4><p id="polarion_merged_2">
  <span style="font-style: italic;">Describe the logical characteristics of each interface between the software product and the users. This may include sample screen images, any GUI standards or product family style guides that are to be followed, screen layout constraints, standard buttons and functions (e.g., help) that will appear on every screen, keyboard shortcuts, error message display standards, and so on. Define the software components for which a user interface is needed. Details of the user interface design should be documented in a separate user interface specification.</span>
</p><div id="polarion_wiki macro name=module-workitem;params=id=WI-324"></div><h4 id="polarion_wiki macro name=module-workitem;params=id=WI-315"></h4><p id="polarion_merged_3">
  <span style="font-style: italic;">Describe the logical and physical characteristics of each interface between the software product and the hardware components of the system. This may include the supported device types, the nature of the data and control interactions between the software and the hardware, and communication protocols to be used.</span>
</p><h4 id="polarion_wiki macro name=module-workitem;params=id=WI-316"></h4><p id="polarion_merged_5">
  <span style="font-style: italic;">Describe the connections between this product and other specific software components (name and version), including databases, operating systems, tools, libraries, and integrated commercial components. Identify the data items or messages coming into the system and going out and describe the purpose of each. Describe the services needed and the nature of communications. Refer to documents that describe detailed application programming interface protocols. Identify data that will be shared across software components. If the data sharing mechanism must be implemented in a specific way (for example, use of a global data area in a multitasking operating system), specify this as an implementation constraint.</span>
</p><h4 id="polarion_wiki macro name=module-workitem;params=id=WI-317"></h4><p id="polarion_merged_6">
  <span style="font-style: italic;">Describe the requirements associated with any communications functions required by this product, including e-mail, web browser, network server communications protocols, electronic forms, and so on. Define any pertinent message formatting. Identify any communication standards that will be used, such as FTP or HTTP. Specify any communication security or encryption issues, data transfer rates, and synchronization mechanisms.</span>
</p><h3 id="polarion_wiki macro name=module-workitem;params=id=WI-318"></h3><h4 id="polarion_wiki macro name=module-workitem;params=id=WI-319"></h4><p id="polarion_1">
  <span style="font-style: italic;">If there are performance requirements for the product under various circumstances, state them here and explain their rationale, to help the developers understand the intent and make suitable design choices. Specify the timing relationships for real time systems. Make such requirements as specific as possible. You may need to state performance requirements for individual functional requirements or features.</span>
</p><div id="polarion_wiki macro name=module-workitem;params=id=WI-325"></div><h4 id="polarion_wiki macro name=module-workitem;params=id=WI-320"></h4><p id="polarion_merged_10">
  <span style="font-style: italic;">Specify those requirements that are concerned with possible loss, damage, or harm that could result from the use of the product. Define any safeguards or actions that must be taken, as well as actions that must be prevented. Refer to any external policies or regulations that state safety issues that affect the productâ€™s design or use. Define any safety certifications that must be satisfied.</span>
</p><h4 id="polarion_wiki macro name=module-workitem;params=id=WI-321"></h4><p id="polarion_merged_11">
  <span style="font-style: italic;">Specify any requirements regarding security or privacy issues surrounding use of the product or protection of the data used or created by the product. Define any user identity authentication requirements. Refer to any external policies or regulations containing security issues that affect the product. Define any security or privacy certifications that must be satisfied.</span>
</p><h4 id="polarion_wiki macro name=module-workitem;params=id=WI-322"></h4><p id="polarion_merged_12">
  <span style="font-style: italic;">Specify any additional quality characteristics for the product that will be important to either the customers or the developers. Some to consider are: adaptability, availability, correctness, flexibility, interoperability, maintainability, portability, reliability, reusability, robustness, testability, and usability. Write these to be specific, quantitative, and verifiable when possible. At the least, clarify the relative preferences for various attributes, such as ease of use over ease of learning.</span>
</p><h4 id="polarion_wiki macro name=module-workitem;params=id=WI-323"></h4><p id="polarion_merged_13">
  <span style="font-style: italic;">Define any other requirements not covered elsewhere in the SRS. This might include database requirements, internationalization requirements, legal requirements, reuse objectives for the project, and so on. Add any new sections that are pertinent to the project.</span>
</p><h2 id="polarion_wiki macro name=module-workitem;params=id=WI-328"></h2><p id="polarion_merged_14">
  <span style="font-style: italic;">Define all the terms necessary to properly interpret this document, including acronyms and abbreviations. You may wish to build a separate glossary that spans multiple projects or the entire organization, and just include terms specific to a single project in each document.<br/>
  </span>
</p><h2 id="polarion_wiki macro name=module-workitem;params=id=WI-329"></h2><p id="polarion_merged_15">
  <span style="font-style: italic;">Optionally, include any pertinent analysis models, such as data flow diagrams, class diagrams, state-transition diagrams, or entity-relationship diagrams.</span>
</p>]]></field>
    <field id="outlineNumbering">
        <struct/>
    </field>
    <field id="renderingLayouts">
        <list>
            <struct>
                <item id="label">Requirement</item>
                <item id="layouter">section</item>
                <item id="properties">
                    <list>
                        <struct>
                            <item id="key">fieldsAtStart</item>
                            <item id="value">id</item>
                        </struct>
                        <struct>
                            <item id="key">fieldsAtEnd</item>
                            <item id="value">severity, status</item>
                        </struct>
                        <struct>
                            <item id="key">fieldsAtEndAsTable</item>
                        </struct>
                        <struct>
                            <item id="key">hidden</item>
                        </struct>
                    </list>
                </item>
                <item id="type">requirement</item>
            </struct>
        </list>
    </field>
    <field id="status">draft</field>
    <field id="structureLinkRole">parent</field>
    <field id="type">req_specification</field>
    <field id="usesOutlineNumbering">true</field>
</module>
